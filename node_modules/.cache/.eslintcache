[{"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/index.js":"1","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/reportWebVitals.js":"2","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/App.js":"3","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/Componente.js":"4","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/Estado.js":"5","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/RenderizadoCondicional.js":"6","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/Propiedades.js":"7","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/RenderizadoElementos.js":"8","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/Eventos.js":"9","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/ComunicacionComponentes.js":"10","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/CicloVida.js":"11","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/AjaxApis.js":"12","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/TimerHooks.js":"13"},{"size":500,"mtime":1625183152811,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1625183152811,"results":"16","hashOfConfig":"15"},{"size":2265,"mtime":1628464101067,"results":"17","hashOfConfig":"15"},{"size":295,"mtime":1625183152811,"results":"18","hashOfConfig":"15"},{"size":628,"mtime":1625183152811,"results":"19","hashOfConfig":"15"},{"size":520,"mtime":1625183152811,"results":"20","hashOfConfig":"15"},{"size":724,"mtime":1625183152811,"results":"21","hashOfConfig":"15"},{"size":935,"mtime":1625438549152,"results":"22","hashOfConfig":"15"},{"size":2888,"mtime":1625438344216,"results":"23","hashOfConfig":"15"},{"size":749,"mtime":1627860317268,"results":"24","hashOfConfig":"15"},{"size":1879,"mtime":1628117174831,"results":"25","hashOfConfig":"15"},{"size":2087,"mtime":1628119792891,"results":"26","hashOfConfig":"15"},{"size":2524,"mtime":1628634198059,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ehlm8p",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/index.js",[],["58","59"],"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/reportWebVitals.js",[],"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/App.js",[],"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/Componente.js",[],"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/Estado.js",[],"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/RenderizadoCondicional.js",[],"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/Propiedades.js",[],"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/RenderizadoElementos.js",[],"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/Eventos.js",[],"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/ComunicacionComponentes.js",[],"/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/CicloVida.js",["60"],"import React, { Component } from 'react';\n\nclass Time extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    componentWillUnmount() {\n        console.log(3,'El componente esta eliminado del DOM');\n    }\n    render() {\n        return(\n            <>\n            <h3>{this.props.time}</h3>\n            </>\n        )\n    }\n}\n\n\nexport default class CicloVida extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            time: new Date().toLocaleTimeString(),\n            visible: false\n        }\n\n        this.temporizator = null;\n\n        console.log(0, 'El componente se iniciliza pero aun no esta en el DOM');      \n     \n    }\n\n    componentDidMount(){\n        console.log(1,'El componente ya esta disponible en el DOM');\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(2, 'El componente esta actualizado');\n        console.log('props de antes: ', prevProps);\n        console.log('El stado anterior: ', prevState);\n    }\n\n    tictac = () => {\n       this.temporizator = setInterval(() => {\n            this.setState({\n                time: new Date().toLocaleTimeString()\n            })\n            \n           \n        }, 1000);\n    }\n\n    start = () => {\n        this.tictac();\n        this.setState({\n            visible: true\n        })\n    }\n\n    stop = () => {\n        clearInterval(this.temporizator);\n        this.setState({\n            visible: false\n        })\n    }\n\n\n    render(){\n        console.log(4, 'El componente se monta/actualiza en el DOM');\n        return(\n            <>\n                <h2>Componente Ciclo de vida</h2>\n                {this.state.visible && <Time time={this.state.time} /> }\n                \n                <button onClick={this.start}>start</button>\n                <button onClick={this.stop}>stop</button>\n            </>\n        )\n    }\n    \n}","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/AjaxApis.js",["61"],"import React, { Component } from 'react';\n\nexport default class AjaxApis extends Component {\n\n    state = {\n        pokemons: []\n    }\n\n    componentDidMount() {\n        const url = 'https://pokeapi.co/api/v2/pokemon';\n\n        fetch(url)\n            .then(res => res.json())\n            .then(json => {\n                console.log(1,json)\n                json.results.forEach(element => {\n                    fetch(element.url)\n                        .then(response => response.json())\n                        .then(response => {\n                            let pokemon = {\n                                id: response.id,\n                                name: response.name,\n                                avatar: response.sprites.front_default\n                            }\n                            \n                            //push the current pokemon to the state pokemons array\n                            let pokemons = [...this.state.pokemons, pokemon];\n\n                            this.setState({pokemons})\n                        })\n                });\n            })\n    }\n\n    showPokemons = () => {\n        if(this.state.pokemons.length === 0 ) {\n           return  'Loading...'\n        } else {\n            this.state.pokemons.map(pokemon => {\n                <Pokemons\n                    key={pokemon.id}\n                    name={pokemon.name}\n                    avatar={pokemon.avatar}\n                />\n            })\n        }\n    }\n\n    render() {\n\n        return(\n            <>\n                <h3>Componentes de peticiones Ajax a Apis</h3>\n                {this.state.pokemons.length === 0 ? 'Loading' : this.state.pokemons.map(pokemon => \n                <Pokemons\n                    key={pokemon.id}\n                    name={pokemon.name}\n                    avatar={pokemon.avatar}\n                />\n            )}\n            </>\n        )\n    }\n}\n\nfunction Pokemons(props){\n    return(\n        <figure>            \n            <img src={props.avatar} alt={props.name}/>\n            <figcaption>{props.name}</figcaption>\n        </figure>\n    )\n}","/home/samba/workspace/mydata/my-Projects/react/react-basics/src/components/TimerHooks.js",["62","63","64","65"],"import React, { useState, useEffect } from 'react';\n\n\nfunction Watch({timer}) {\n    \n\n    return(\n        <><h3>{timer}</h3></>\n    )\n}\n\nconst addSecondsToDate = (date, delay) => {  \n    date = new Date(date)\n    date.setSeconds(date.getSeconds() + delay)\n  \n    return date\n  }\n\n  const displayTime = (startDate)=> {\n    startDate = new Date(startDate);\n    const endDate = new Date();\n    let timeDiff = (endDate - startDate) / 1000;\n\n   console.log(startDate, endDate);\n   console.log(timeDiff);\n   console.log(secToHHmmss(timeDiff));\n    return secToHHmmss(timeDiff);\n}\n\n function secToHHmmss(seconds){\n    var hours = Math.floor(seconds / 3600);\n    seconds %= 3600;\n    var minutes = Math.floor(seconds / 60);\n    var seconds = Math.ceil(seconds % 60);\n\n    return String(hours).padStart(2, '0') + \":\" + String(minutes).padStart(2, '0') + \":\" + String(seconds).padStart(2, '0')\n}\n\nexport default function TimerHooks() {\n    const [timeString, setTimeString] = useState(new Date());\n    const [visible, setVisible] = useState();\n    const dateString = \"Wed Aug 11 2021 00:00:00 GMT+0200 (Central European Summer Time)\";\n    const [timer, setTimer] = useState(\"00:00:00\");\n    const [isPaused, setIsPaused] = useState(true);\n\n    useEffect(() => {\n        let clockTimer;\n        if (visible) {\n            clockTimer = setInterval(() => {\n                setTimeString(new Date())\n            },1000)\n        } else {\n            clearInterval(clockTimer)\n        }\n\n        return() => {\n            console.log('------------------------------------');\n            console.log('component will unmount');\n            console.log('------------------------------------');\n            clearInterval(clockTimer)\n        }\n    }, [visible])\n\n\n    useEffect(() => {\n        let datetimer;\n        if (!isPaused) {\n            datetimer = setInterval(() => {\n                setTimer(displayTime(dateString))\n            },1000)\n    \n        }else {\n            clearInterval(datetimer)\n        }\n        \n        return() => {\n            clearInterval(datetimer)\n        }\n    }, [isPaused, timer])\n\n\n    return(\n        <>\n        <h3>Timer with HOOKS</h3>\n        <Watch timer = {timer} />\n        <button onClick={() => setIsPaused(false)}>start</button>\n        <button onClick={() => setIsPaused(true)}>pause</button>\n\n\n        {/* {visible && <Watch date = {timeString} />}\n        <button onClick={() => setVisible(true)}>+</button>\n        <button onClick={() => setVisible(false)}>-</button> */}\n        </>\n    )\n}",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":4,"column":5,"nodeType":"72","messageId":"73","endLine":6,"endColumn":6},{"ruleId":"74","severity":1,"message":"75","line":39,"column":45,"nodeType":"76","messageId":"77","endLine":39,"endColumn":47},{"ruleId":"78","severity":1,"message":"79","line":12,"column":7,"nodeType":"80","messageId":"81","endLine":12,"endColumn":23},{"ruleId":"82","severity":1,"message":"83","line":34,"column":9,"nodeType":"80","messageId":"84","endLine":34,"endColumn":16},{"ruleId":"78","severity":1,"message":"85","line":40,"column":12,"nodeType":"80","messageId":"81","endLine":40,"endColumn":22},{"ruleId":"78","severity":1,"message":"86","line":41,"column":21,"nodeType":"80","messageId":"81","endLine":41,"endColumn":31},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'addSecondsToDate' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'seconds' is already defined.","redeclared","'timeString' is assigned a value but never used.","'setVisible' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]